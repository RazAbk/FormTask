{"version":3,"sources":["components/Form.jsx","App.js","index.js"],"names":["Form","useState","formState","setFormState","useEffect","firstName","lastName","fullName","mobilePhoneNumber","socialSecurityNumber","email","typeOfFormToSend","fundName","accountNumber","fundNumber","employmentType","withdrawalAmount","withdrawalType","automatedMonthlyWithdrawal","paymentWithdrawal","correspondingToALoan","eligibleForTaxRefund","handleChange","ev","currentState","JSON","parse","stringify","target","name","value","wordsCount","match","length","split","className","Box","onChange","component","sx","m","width","validate","autoComplete","TextField","id","type","label","variant","FormControl","RadioGroup","FormControlLabel","control","Radio","defaultValue","FormGroup","Checkbox","Stack","spacing","direction","Button","onClick","preventDefault","console","log","test","namesTest","isValid","noValidMsg","key","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6497c63.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { FormControl } from \"@mui/material\";\r\n\r\nexport const Form = () => {\r\n\r\n    const [formState, setFormState] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setFormState({\r\n            firstName: '',\r\n            lastName: '',\r\n            fullName: '',\r\n            mobilePhoneNumber: '',\r\n            socialSecurityNumber: '',\r\n            email: '',\r\n            typeOfFormToSend: 'fund-withdrawal',\r\n            fundName: '',\r\n            accountNumber: '',\r\n            fundNumber: '',\r\n            employmentType: 'Employee',\r\n            withdrawalAmount: '',\r\n            withdrawalType: 'full-withdrawal',\r\n            automatedMonthlyWithdrawal: {\r\n                paymentWithdrawal: false,\r\n                correspondingToALoan: false,\r\n                eligibleForTaxRefund: false,\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (ev) => {\r\n        const currentState = JSON.parse(JSON.stringify(formState))\r\n\r\n        if(ev.target.name === 'fullName'){\r\n            const fullName = ev.target.value\r\n            const wordsCount = fullName.match(/(\\w+)/g).length\r\n            if(wordsCount === 1){\r\n                currentState.firstName = fullName\r\n            } else if(wordsCount === 2){\r\n                currentState.firstName = fullName.split(' ')[0]\r\n                currentState.lastName = fullName.split(' ')[1]\r\n            }\r\n            currentState.fullName = currentState.firstName + ' ' + currentState.lastName\r\n        }else if(ev.target.name === 'firstName' || ev.target.name === 'lastName') {\r\n            currentState[ev.target.name] = ev.target.value\r\n            currentState.fullName = currentState.firstName + ' ' + currentState.lastName\r\n        }else if(ev.target.name === 'automatedMonthlyWithdrawal'){\r\n            if(ev.target.value === 'payment-withdrawal'){\r\n                currentState.automatedMonthlyWithdrawal.paymentWithdrawal = !currentState.automatedMonthlyWithdrawal.paymentWithdrawal\r\n            }\r\n            if(ev.target.value === 'corresponding-to-a-loan'){\r\n                currentState.automatedMonthlyWithdrawal.correspondingToALoan = !currentState.automatedMonthlyWithdrawal.correspondingToALoan\r\n            }\r\n        } else if(ev.target.name === 'eligibleForTaxRefund'){\r\n            if(ev.target.value === 'true'){\r\n                currentState.automatedMonthlyWithdrawal.eligibleForTaxRefund = true\r\n            } else {\r\n                currentState.automatedMonthlyWithdrawal.eligibleForTaxRefund = false\r\n            }\r\n        } else{\r\n            currentState[ev.target.name] = ev.target.value\r\n        }\r\n\r\n        setFormState(currentState)\r\n    }\r\n\r\n    const submitForm = (ev) => {\r\n        ev.preventDefault()\r\n\r\n        console.log(formState)\r\n\r\n        const test = {\r\n            firstName: false,\r\n            lastName: false,\r\n            socialSecurityNumber: false,\r\n            fundName: false,\r\n            withdrawalAmount: true\r\n        }\r\n\r\n        const namesTest = /^[a-zA-Z_ ]*$/\r\n        test.firstName =  namesTest.test(formState.firstName)\r\n        test.lastName =  namesTest.test(formState.lastName)\r\n\r\n        const socialSecurityNumberTest = /^(([0-9]){3}\\-([0-9]){2}\\-([0-9]){4})$/\r\n        test.socialSecurityNumber = socialSecurityNumberTest.test(formState.socialSecurityNumber)\r\n\r\n        const fundNameTest = /^[A-Za-z0-9 _]*[A-Za-z]+[A-Za-z0-9 _]*$/\r\n        test.fundName = fundNameTest.test(formState.fundName)\r\n\r\n        if(formState.withdrawalAmount){\r\n            if(formState.withdrawalAmount > 99000 || formState.withdrawalAmount < 0) test.withdrawalAmount = false\r\n        }\r\n\r\n        let isValid = true\r\n        let noValidMsg = ''\r\n\r\n        for(const key in test){\r\n            if(!test[key]){\r\n                isValid = false\r\n                switch(key){\r\n                    case 'firstName':\r\n                        noValidMsg += '\\n• first name must consist only english letters'\r\n                        break;\r\n                    case 'lastName':\r\n                        noValidMsg += '\\n• last name must consist only english letters'\r\n                        break;\r\n                    case 'socialSecurityNumber':\r\n                        noValidMsg += '\\n• social security number is not in the right format'\r\n                        break;\r\n                    case 'fundName':\r\n                        noValidMsg += '\\n• fund name must consist only english letters and numbers'\r\n                        break;\r\n                    case 'withdrawalAmount':\r\n                        noValidMsg += '\\n• withdrawal amount must be between 0 - 99,000'\r\n                        break;\r\n                    default:\r\n                        noValidMsg += ''\r\n                }\r\n            }\r\n        }\r\n\r\n        if(isValid){\r\n            console.log(formState)\r\n            alert('your form was submitted successfully')\r\n        } else {\r\n            console.log(noValidMsg)\r\n            alert(`please correct the form: ${noValidMsg}`)\r\n        }\r\n\r\n    }\r\n\r\n    const clearForm = (ev) => {\r\n        ev.preventDefault()\r\n        setFormState({\r\n            firstName: '',\r\n            lastName: '',\r\n            fullName: '',\r\n            mobilePhoneNumber: '',\r\n            socialSecurityNumber: '',\r\n            email: '',\r\n            typeOfFormToSend: 'fund-withdrawal',\r\n            fundName: '',\r\n            accountNumber: '',\r\n            fundNumber: '',\r\n            employmentType: 'Employee',\r\n            withdrawalAmount: '',\r\n            withdrawalType: 'full-withdrawal',\r\n            automatedMonthlyWithdrawal: {\r\n                paymentWithdrawal: false,\r\n                correspondingToALoan: false,\r\n                eligibleForTaxRefund: false,\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    if(!formState) return <h1>Loading...</h1>\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>form</h1>\r\n      <Box\r\n        onChange={handleChange}\r\n        component=\"form\"\r\n        sx={{\"& > :not(style)\": { m: 1, width: \"100%\" },}}\r\n        validate\r\n        autoComplete=\"off\"\r\n        className=\"form-cmp\"\r\n      >\r\n        <div className=\"names-fields\">\r\n          <TextField id=\"first-name\" type=\"text\" value={formState.firstName} name=\"firstName\" label=\"First name\" variant=\"standard\" />\r\n          <TextField id=\"last-name\" type=\"text\" value={formState.lastName} name=\"lastName\" label=\"Last name\" variant=\"standard\" />\r\n        </div>\r\n        <TextField id=\"full-name\" type=\"text\" value={formState.fullName} name=\"fullName\" label=\"Full name\" variant=\"standard\" />\r\n        <TextField id=\"socialSecurityNumber\" type=\"text\" value={formState.socialSecurityNumber} name=\"socialSecurityNumber\" label=\"Social Security Number (DDD-DD-DDDD)\" variant=\"standard\"/>\r\n        <TextField id=\"mobilePhoneNumber\" type=\"number\" value={formState.mobilePhoneNumber} name=\"mobilePhoneNumber\" label=\"Mobile Phone Number\" variant=\"standard\" />\r\n        <TextField id=\"Email\" type=\"email\" value={formState.email} name=\"email\" label=\"Email\" variant=\"standard\" />\r\n\r\n        <h2>Type of forms to send</h2>\r\n        <FormControl onChange={handleChange} component=\"fieldset\" className=\"form-radio-btns\">\r\n          <RadioGroup aria-label=\"gender\" value={formState.typeOfFormToSend} name=\"typeOfFormToSend\" >\r\n            <FormControlLabel value=\"fund-withdrawal-request\" control={<Radio />} label=\"Fund withdrawal request\" />\r\n            <FormControlLabel value=\"fund-transfer-cancel-request\" control={<Radio />} label=\"Fund transfer cancel request\" />\r\n            <FormControlLabel value=\"life-insurance-onboarding-form\" control={<Radio />} label=\"Life insurance onboarding form\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <TextField id=\"fundName\" type=\"text\" value={formState.fundName} name=\"fundName\" label=\"Fund Name\" variant=\"standard\" />\r\n        <TextField id=\"standard-basic\" type=\"number\" value={formState.accountNumber} name=\"accountNumber\" label=\"Account Number\" variant=\"standard\" />\r\n        <TextField id=\"standard-basic\" type=\"number\" value={formState.fundNumber} name=\"fundNumber\" label=\"Fund Number\" variant=\"standard\" />\r\n\r\n        <h2>Employment type</h2>\r\n        <FormControl component=\"fieldset\" className=\"form-radio-btns\">\r\n          <RadioGroup aria-label=\"employment-type\" defaultValue=\"Employee\" value={formState.employmentType}  name=\"employmentType\">\r\n            <FormControlLabel value=\"Employee\" control={<Radio />} label=\"Employee\" />\r\n            <FormControlLabel value=\"Independent\" control={<Radio />} label=\"Independent\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n\r\n\r\n        <h2>Withdrawal type</h2>\r\n        <FormControl component=\"fieldset\" className=\"form-radio-btns\">\r\n          <RadioGroup onChange={handleChange} aria-label=\"withdrawalType\" defaultValue=\"full-withdrawal\" value={formState.withdrawalType} name=\"withdrawalType\" >\r\n            <FormControlLabel value=\"full-withdrawal\" control={<Radio />} label=\"Full withdrawal\" />\r\n            <FormControlLabel value=\"partial-withdrawal\" control={<Radio />} label=\"Partial withdrawal\" />\r\n\r\n            {formState.withdrawalType === 'partial-withdrawal' && \r\n                <TextField id=\"partial-withdrawal\" type=\"number\" value={formState.withdrawalAmount} name=\"withdrawalAmount\" label=\"Withdrawal Amount\" variant=\"standard\"/>\r\n            }\r\n\r\n            <FormControlLabel value=\"automated-monthly-withdrawal\" control={<Radio />}  label=\"Automated monthly withdrawal\" />\r\n\r\n            {formState.withdrawalType === 'automated-monthly-withdrawal' &&\r\n                <FormGroup className=\"inner-checkboxes\">\r\n                    <FormControlLabel onChange={handleChange} name=\"automatedMonthlyWithdrawal\" value=\"payment-withdrawal\" control={<Checkbox />} label=\"Payment withdrawal\" />\r\n                        {formState.automatedMonthlyWithdrawal.paymentWithdrawal &&\r\n                            <RadioGroup className=\"inner-checkboxes\" onChange={handleChange} aria-label=\"withdrawalType\" defaultValue={false} value={formState.automatedMonthlyWithdrawal.eligibleForTaxRefund} name=\"eligibleForTaxRefund\" >\r\n                                <FormControlLabel value={true} control={<Radio />} label=\"Eligible for tax refund\" />\r\n                                <FormControlLabel value={false} control={<Radio />} label=\"Not eligible for tax refund\" />\r\n                            </RadioGroup>\r\n                        }\r\n                         \r\n                    <FormControlLabel onChange={handleChange} name=\"automatedMonthlyWithdrawal\" value=\"corresponding-to-a-loan\" control={<Checkbox />} label=\"Corresponding to a loan\" />\r\n                </FormGroup>\r\n            }\r\n            \r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Stack spacing={2} direction=\"row\" className=\"action-btns\">\r\n          <Button onClick={clearForm} variant=\"contained\" className=\"clear-btn\">Clear Form</Button>\r\n          <Button onClick={submitForm} variant=\"contained\" className=\"send-btn\">Send Form</Button>\r\n        </Stack>\r\n\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Form } from \"./components/Form\";\n\n\nexport const App = () => {\n  return (\n    <div className=\"app\">\n      <Form/>\n    </div>\n  );\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./styles/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}